### Project Euler Problem 002
##
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def fibonacci():
	list = []
	e_list = []
	o_list = []
	a=1
	b=2
	for i in range(300):
		if b < 4000000:
			#print("b = ",b)
			list.append(b)
			#print("list = ",list)
			a,b= b,a+b
			for i in list:
				if (i%2==0):
					e_list.append(i)
				else:
					o_list.append(i)
			e_list.sort()
			#print("e_list = ",e_list)
			even_list = dict.fromkeys(e_list)
			print( sum(even_list.keys()) )
			o_list.sort()
obj = fibonacci()